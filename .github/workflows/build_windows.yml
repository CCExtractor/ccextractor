name: Build CCExtractor on Windows

env:
  RUSTFLAGS: -Ctarget-feature=+crt-static
  VCPKG_DEFAULT_TRIPLET: x64-windows-static

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/build_windows.yml"
      - "**.c"
      - "**.h"
      - "windows/**"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - ".github/workflows/build_windows.yml"
      - "**.c"
      - "**.h"
      - "windows/**"

jobs:
  build_release:
    runs-on: windows-2019
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2.0.0
      - name: Install llvm and clang
        run: choco install llvm gpac
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install Win 10 SDK
        uses: ilammy/msvc-dev-cmd@v1
      - name: Setup Vcpkg
        id: vcpkg
        uses: friendlyanon/setup-vcpkg@v1
        with:
          committish: "2023.08.09"
          cache-version: "3"
          ignore-reserve-cache-error: true
      - name: Install dependencies
        run: cd vcpkg && vcpkg integrate install && vcpkg install leptonica tesseract ffmpeg --triplet x64-windows-static
      - name: build Release-Full
        env:
          LIBCLANG_PATH: "C:\\Program Files\\LLVM\\lib"
          LLVM_CONFIG_PATH: "C:\\Program Files\\LLVM\\bin\\llvm-config"
          CARGO_TARGET_DIR: "..\\..\\windows"
          BINDGEN_EXTRA_CLANG_ARGS: -fmsc-version=0
          VCPKG_ROOT: ${{ github.workspace }}\vcpkg
        run: msbuild ccextractor.sln /p:Configuration=Release-Full /p:Platform=x64
        working-directory: ./windows
      - name: Display version information
        run: ./ccextractorwinfull.exe --version
        working-directory: ./windows/x64/Release-Full
      - uses: actions/upload-artifact@v4
        with:
          name: CCExtractor Windows Release build
          path: |
            ./windows/x64/Release-Full/ccextractorwinfull.exe
            ./windows/x64/Release-Full/*.dll
  build_debug:
    runs-on: windows-2019
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2.0.0
      - name: Install llvm and clang
        run: choco install llvm gpac
      - name: Setup Vcpkg
        id: vcpkg
        uses: friendlyanon/setup-vcpkg@v1
        with:
          committish: "2023.08.09"
          cache-version: "3"
          ignore-reserve-cache-error: true
      - name: Install dependencies
        run: cd vcpkg && vcpkg integrate install && vcpkg install leptonica tesseract ffmpeg --triplet x64-windows-static
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install Win 10 SDK
        uses: ilammy/msvc-dev-cmd@v1
      - name: build Debug-Full
        env:
          LIBCLANG_PATH: "C:\\Program Files\\LLVM\\lib"
          LLVM_CONFIG_PATH: "C:\\Program Files\\LLVM\\bin\\llvm-config"
          CARGO_TARGET_DIR: "..\\..\\windows"
          BINDGEN_EXTRA_CLANG_ARGS: -fmsc-version=0
          VCPKG_ROOT: ${{ github.workspace }}\vcpkg
        run: msbuild ccextractor.sln /p:Configuration=Debug-Full /p:Platform=x64
        working-directory: ./windows
      - name: Display version information
        run: ./ccextractorwinfull.exe --version
        working-directory: ./windows/x64/Debug-Full
      - uses: actions/upload-artifact@v4
        with:
          name: CCExtractor Windows Debug build
          path: |
            ./windows/x64/Debug-Full/ccextractorwinfull.exe
            ./windows/x64/Debug-Full/ccextractorwinfull.pdb
            ./windows/x64/Debug-Full/*.dll
