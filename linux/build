#!/bin/bash
BLD_FLAGS="-std=gnu99 -Wno-write-strings -DGPAC_CONFIG_LINUX -D_FILE_OFFSET_BITS=64 -DVERSION_FILE_PRESENT -DENABLE_OCR -DFT2_BUILD_LIBRARY -DGPAC_DISABLE_VTT -DGPAC_DISABLE_OD_DUMP"
bit_os=$(getconf LONG_BIT)
if [ "$bit_os"=="64" ]
then
    BLD_FLAGS="$BLD_FLAGS -DGPAC_64_BITS"
fi
BLD_INCLUDE="-I../src -I /usr/include/leptonica/ -I /usr/include/tesseract/ -I../src/lib_ccx/ -I../src/gpacmp4/ -I../src/libpng/ -I../src/zlib/ -I../src/zvbi -I../src/lib_hash -I../src/protobuf-c -I../src/utf8proc -I../src/freetype/include"
SRC_LIBPNG="$(find ../src/libpng/ -name '*.c')"
SRC_ZLIB="$(find ../src/zlib/ -name '*.c')"
SRC_ZVBI="$(find ../src/zvbi/ -name '*.c')"
SRC_CCX="$(find ../src/lib_ccx/ -name '*.c')"
SRC_GPAC="$(find ../src/gpacmp4/ -name '*.c')"
SRC_HASH="$(find ../src/lib_hash/ -name '*.c')"
SRC_PROTOBUF="$(find ../src/protobuf-c/ -name '*.c')"
SRC_UTF8PROC="../src/utf8proc/utf8proc.c"
SRC_FREETYPE="../src/freetype/autofit/autofit.c
        ../src/freetype/base/ftbase.c
        ../src/freetype/base/ftbbox.c
        ../src/freetype/base/ftbdf.c
        ../src/freetype/base/ftbitmap.c
        ../src/freetype/base/ftcid.c
        ../src/freetype/base/ftfntfmt.c
        ../src/freetype/base/ftfstype.c
        ../src/freetype/base/ftgasp.c
        ../src/freetype/base/ftglyph.c
        ../src/freetype/base/ftgxval.c
        ../src/freetype/base/ftinit.c
        ../src/freetype/base/ftlcdfil.c
        ../src/freetype/base/ftmm.c
        ../src/freetype/base/ftotval.c
        ../src/freetype/base/ftpatent.c
        ../src/freetype/base/ftpfr.c
        ../src/freetype/base/ftstroke.c
        ../src/freetype/base/ftsynth.c
        ../src/freetype/base/ftsystem.c
        ../src/freetype/base/fttype1.c
        ../src/freetype/base/ftwinfnt.c
        ../src/freetype/bdf/bdf.c
        ../src/freetype/bzip2/ftbzip2.c
        ../src/freetype/cache/ftcache.c
        ../src/freetype/cff/cff.c
        ../src/freetype/cid/type1cid.c
        ../src/freetype/gzip/ftgzip.c
        ../src/freetype/lzw/ftlzw.c
        ../src/freetype/pcf/pcf.c
        ../src/freetype/pfr/pfr.c
        ../src/freetype/psaux/psaux.c
        ../src/freetype/pshinter/pshinter.c
        ../src/freetype/psnames/psnames.c
        ../src/freetype/raster/raster.c
        ../src/freetype/sfnt/sfnt.c
        ../src/freetype/smooth/smooth.c
        ../src/freetype/truetype/truetype.c
        ../src/freetype/type1/type1.c
        ../src/freetype/type42/type42.c
        ../src/freetype/winfonts/winfnt.c"
API_WRAPPERS="$(find ../src/wrappers/ -name '*.c')"
BLD_SOURCES="../src/ccextractor.c $SRC_CCX $SRC_GPAC $SRC_ZLIB $SRC_ZVBI $SRC_LIBPNG $SRC_HASH $SRC_PROTOBUF $SRC_UTF8PROC $API_WRAPPERS $SRC_FREETYPE"
BLD_LINKER="-lm -zmuldefs -l tesseract -l lept"

echo "Running pre-build script..."
./pre-build.sh
echo "Trying to compile..."

out=$((LC_ALL=C gcc $BLD_FLAGS $BLD_INCLUDE -o ccextractor $BLD_SOURCES $BLD_LINKER)2>&1)
res=$?
if [[ $out == *"gcc: command not found"* ]]
then
    echo "Error: please install gcc";
    exit 1
fi
if [[ $out == *"curl.h: No such file or directory"* ]]
then
    echo "Error: please install curl development library (libcurl4-gnutls-dev for Debian/Ubuntu)";
    exit 2
fi
if [[ $out == *"capi.h: No such file or directory"* ]]
then
    echo "Error: please install tesseract development library (tesseract-ocr-dev for Debian/Ubuntu)";
    exit 3
fi
if [[ $out == *"allheaders.h: No such file or directory"* ]]
then
    echo "Error: please install leptonica development library (libleptonica-dev for Debian/Ubuntu)";
    exit 4
fi
if [[ $res -ne 0 ]]  # Unknown error
then
    echo "Compiled with errors"
    >&2 echo "$out"
    exit 5
fi
if [[ "$out" != "" ]] ; then
    echo "$out"
    echo "Compilation successful, compiler message shown in previous lines"
else
    echo "Compilation successful, no compiler messages."
fi
